CSS — Википедия
CSS
Материал из Википедии — свободной энциклопедии
(перенаправлено с «
Cascading Style Sheets
»)
Текущая версия страницы пока
не проверялась
опытными участниками и может значительно отличаться от
версии
, проверенной 22 декабря 2018; 
проверки требует
1 правка
.
Текущая версия страницы пока
не проверялась
опытными участниками и может значительно отличаться от
версии
, проверенной 22 декабря 2018; 
проверки требует
1 правка
.
Перейти к навигации
Перейти к поиску
CSS
Расширение
.css
&#91;1&#93;
MIME
-тип
text/css
Разработчик
CSS Working Group
[d]
Опубликован
17 декабря
1996
Тип формата
Язык стилей
Стандарт(ы)
Level 1 (Recommendation)
Level 2 (Recommendation)
Level 2 Revision 1 (Recommendation)
Сайт
w3.org/Style/CSS/
drafts.csswg.org
Каскадные таблицы стилей
Таблица стилей
CSS Zen Garden
The Zen of CSS Design
CSSTidy
Internet Explorer box model bug
Сравнение
Браузерных движков
Языков таблиц стилей
Веб-дизайн
Бестабличный
Holy Grail
Адаптивный
Каскадные таблицы стилей
&#160;
HTML
HTML
и
HTML5
Динамический HTML
XHTML
XHTML Mobile Profile
и
CHTML
Document Object Model
Семейство шрифтов
Кодировки символов
Мнемоники в HTML
Редактор HTML
Элементы HTML
Семантическая вёрстка
Карта изображений
Цвета HTML
Формы HTML
Фреймы HTML
HTML5 audio
и
HTML5 video
Canvas
Скрипты в HTML
Unicode и HTML
Браузерный движок
Quirks mode
Каскадные таблицы стилей
W3C
и
WHATWG
Web Storage
WebGL
Сравнение
языков разметки документов
браузеров
браузерных движков
для
HTML
HTML5
HTML5 Canvas
HTML5 Media
XHTML
(
1.1
)
У этого термина существуют и другие значения, см.
CSS (значения)
.
CSS
(
/siːɛsɛs/
англ.
&#160;
Cascading Style Sheets
&#160;—
каскадные таблицы стилей
)&#160;—
формальный язык
описания внешнего вида документа, написанного с использованием
языка разметки
.
Преимущественно используется как средство описания, оформления внешнего вида
веб-страниц
, написанных с помощью
языков разметки
HTML
и
XHTML
, но может также применяться к любым
XML-документам
, например, к
SVG
или
XUL
.
Содержание
1
Обзор
1.1
Цель создания CSS
1.2
Способы подключения CSS к документу
1.3
Правила построения CSS
1.3.1
Виды селекторов
1.3.1.1
Универсальный селектор
1.3.1.2
Селектор тегов
1.3.1.3
Селектор классов
1.3.1.4
Селектор идентификаторов
1.3.1.5
Селектор атрибутов
1.3.1.6
Селектор потомков (контекстный селектор)
1.3.1.7
Селектор дочерних элементов
1.3.1.8
Селектор элементов одного уровня
1.3.1.9
Селектор псевдоклассов
1.3.1.10
Селектор псевдоэлементов
1.4
Классы и идентификаторы элементов
1.5
Наследование. Каскадирование. Приоритеты стилей CSS.
1.6
Пример таблицы стилей
2
CSS-вёрстка
3
История создания и развития CSS
3.1
Уровень 1 (CSS1)
3.2
Уровень 2 (CSS2)
3.2.1
Уровень 2, ревизия 1 (CSS2.1)
3.3
Уровень 3 (CSS3)
3.4
Уровень 4 (CSS4)
4
Поддержка CSS браузерами
4.1
Различные блоковые модели
4.2
CSS-фильтры
4.3
Безопасность
5
CSS Framework
6
Расширения CSS
7
См. также
8
Примечания
9
Литература
10
Ссылки
10.1
Англоязычные ресурсы
10.2
Русскоязычные ресурсы
Обзор
[
править
|
править код
]
Цель создания CSS
[
править
|
править код
]
CSS используется создателями
веб-страниц
для задания
цветов
,
шрифтов
, расположения отдельных блоков и других аспектов представления внешнего вида этих веб-страниц. Основной целью разработки CSS являлось разделение описания логической структуры веб-страницы (которое производится с помощью
HTML
или других
языков разметки
) от описания внешнего вида этой веб-страницы (которое теперь производится с помощью
формального языка
CSS). Такое разделение может увеличить доступность документа, предоставить большую гибкость и возможность управления его представлением, а также уменьшить сложность и повторяемость в структурном содержимом. Кроме того, CSS позволяет представлять один и тот же документ в различных стилях или
методах
вывода, таких как экранное представление, печатное представление, чтение голосом (специальным голосовым браузером или программой чтения с экрана), или при выводе устройствами, использующими
шрифт Брайля
.
Способы подключения CSS к документу
[
править
|
править код
]
Правила CSS пишутся на
формальном языке
CSS. Правила могут располагаться как в самом
веб-документе
, внешний вид которого они описывают, так и во внешних
файлах
, имеющих
формат
CSS. Формат CSS&#160;— это
текстовый файл
, в котором содержится перечень правил CSS и комментариев к ним.
Cтили CSS могут быть подключены или внедрены в описываемый ими
веб-документ
четырьмя способами:
когда описание стилей находится в отдельном файле, оно может быть подключено к документу посредством элемента
&lt;link&gt;
, включенного в элемент
&lt;head&gt;
:
&lt;!DOCTYPE html&gt;
&lt;
html
&gt;
&lt;
head
&gt;
.....
&lt;
link
rel
=
&quot;stylesheet&quot;
href
=
&quot;style.css&quot;
&gt;
&lt;/
head
&gt;
&lt;
body
&gt;
.....
&lt;/
body
&gt;
&lt;/
html
&gt;
когда файл стилей размещается отдельно от родительского документа, он может быть подключен к документу инструкцией @import в элементе
&lt;style&gt;
:
&lt;!DOCTYPE html&gt;
&lt;
html
&gt;
&lt;
head
&gt;
.....
&lt;
style
media
=
&quot;all&quot;
&gt;
@
import
url
(
style
.
css
)
;
&lt;/
style
&gt;
&lt;/
head
&gt;
&lt;/
html
&gt;
когда стили описаны внутри документа, они могут быть включены в элемент
&lt;style&gt;
, который, включается в элеменет
&lt;head&gt;
:
&lt;!DOCTYPE html&gt;
&lt;
html
&gt;
&lt;
head
&gt;
.....
&lt;
style
&gt;
body
{
color
:
red
;
}
&lt;/
style
&gt;
&lt;/
head
&gt;
&lt;
body
&gt;
.....
&lt;/
body
&gt;
&lt;/
html
&gt;
когда стили описаны в теле документа, они могут располагаться в атрибутах отдельного элемента
&lt;!DOCTYPE&gt;
&lt;
html
&gt;
&lt;
head
&gt;
.....
&lt;/
head
&gt;
&lt;
body
&gt;
&lt;
p
style
=
&quot;font-size: 20px; color: green; font-family: arial, helvetica, sans-serif&quot;
&gt;
.....
&lt;/
p
&gt;
&lt;/
body
&gt;
&lt;/
html
&gt;
В первых двух случаях к документу применены
внешние стили
, а во вторых&#160;—
внутренние стили
.
Для добавления CSS к
XML-документу
последний должен содержать специальную ссылку на файл стилей:
&lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;style.css&quot;?&gt;
Правила построения CSS
[
править
|
править код
]
В первых трёх случаях подключения стилей CSS к документу (см. выше) каждое правило CSS из файла имеет две основные части&#160;—
селектор
и
блок объявлений
.
Селектор
, расположенный в левой части правила, до знака «{», определяет, на какие части документа (возможно, специально обозанченные) распространяется правило.
Блок объявлений
располагается в правой части правила. Он помещается в фигурные скобки, и, в свою очередь, состоит из одного или более
объявлений
, разделённых знаком «;». Каждое
объявление
представляет собой сочетание
свойства CSS
и
значения
, разделённых знаком ": ". Селекторы могут группироваться в одной строке через запятую. В таком случае свойство применяется к каждому из них.
селектор
,
селектор
{
свойство:
значение
;
свойство:
значение
;
свойство:
значение
;
}
В четвёртом случае подключения CSS к документу (см. список) правило CSS,. являющееся значением атрибута style элемента, к которому он применяется, представляет собой перечень
объявлений
(«
свойство CSS
&#160;:
значение
»), разделённых знаком «;».
Виды селекторов
[
править
|
править код
]
Универсальный селектор
[
править
|
править код
]
*
{
margin
:
0
;
padding
:
0
;
}
Селектор тегов
[
править
|
править код
]
p
{
font-family
:
arial
,
helvetica
,
sans-serif
;
}
Селектор классов
[
править
|
править код
]
.
note
{
color
:
red
;
background-color
:
yellow
;
font-weight
:
bold
;
}
Селектор идентификаторов
[
править
|
править код
]
#
paragraph1
{
margin
:
0
;
}
Селектор атрибутов
[
править
|
править код
]
a
[
href
=
&quot;http://www.somesite.com&quot;
]
{
font-weight
:
bold
;
}
Селектор потомков (контекстный селектор)
[
править
|
править код
]
div
#
paragraph1
p
.
note
{
color
:
red
;
}
Селектор дочерних элементов
[
править
|
править код
]
p
.
note
&gt;
b
{
color
:
red
;
}
Селектор элементов одного уровня
[
править
|
править код
]
h1
+
p
{
font-size
:
24
px
;
}
Селектор псевдоклассов
[
править
|
править код
]
a
:
active
{
color
:
blue
;
}
Селектор псевдоэлементов
[
править
|
править код
]
p
::
first-letter
{
font-size
:
32
px
;
}
Классы и идентификаторы элементов
[
править
|
править код
]
Класс или идентификатор может быть присвоен какому-нибудь элементу HTML посредством атрибутов class или id этого элемента:
&lt;!DOCTYPE html&gt;
&lt;
html
&gt;
&lt;
head
&gt;
&lt;
meta
http-equiv
=
&quot;Content-Type&quot;
content
=
&quot;text/html; charset=utf-8&quot;
&gt;
&lt;
title
&gt;
Селекторы классов и идентификаторов
&lt;/
title
&gt;
&lt;
style
&gt;
p
.
big
{
font-family
:
arial
,
helvetica
,
sans-serif
;
color
:
red
;
}
div
#
first
{
background-color
:
silver
;
}
&lt;/
style
&gt;
&lt;/
head
&gt;
&lt;
body
&gt;
&lt;
div
id
=
&quot;first&quot;
&gt;
&lt;!-- Это div c серым фоном, стилизованный по id --&gt;
&lt;/
div
&gt;
&lt;
p
class
=
&quot;big&quot;
&gt;
&lt;!-- Это текст красного цвета --&gt;
&lt;/
p
&gt;
&lt;/
body
&gt;
&lt;/
html
&gt;
Основное различие между классами элементов и идентификаторами элементов в том, что идентификатор предназначен для одного элемента, тогда как класс обычно присваивают сразу нескольким. Тем не менее, современные браузеры, как правило, корректно отображают множественные элементы с одинаковым идентификатором. Также различие в том, что могут существовать множественные классы (когда класс элемента состоит из нескольких слов, разделённых пробелами). Для идентификаторов такое невозможно.
Важно отметить следующее отличие идентификатора от класса: идентификаторы широко используются в
JavaScript
для нахождения уникального элемента в документе.
Имена классов и идентификаторов, в отличие от названий тегов и их атрибутов, чувствительны к регистру ввода букв.
Свойства классов и идентификаторов задаются с помощью соответствующих селекторов. Причём может быть задано как свойство класса в целом (в таком случае селектор начинается с «.», например, «.big») или свойство идентификатора самого по себе (в таком случае селектор начинается с «#», например, «#first»), так и свойство какого-нибудь элемента этого класса или с этим идентификатором.
В CSS, помимо классов, задаваемых автором страницы, существует также ограниченный набор так называемых
псевдоклассов
,
описывающих вид гиперссылок с определённым состоянием в документе, вид элемента, на котором находится фокус ввода, а также вид элементов, являющихся первыми дочерними элементами других элементов. Также в CSS существует четыре так называемых
псевдоэлемента
: первая буква, первая строка, применение специальных стилей до и после элемента.
Наследование. Каскадирование. Приоритеты стилей CSS.
[
править
|
править код
]
Применение CSS к документам HTML основано на принципах
наследования
и
каскадирования
.  Принцип
наследования
заключается в том, что свойства CSS объявленные для элементов-предков, почти всегда,наследуются элементами-потомками.
Принцип
каскадирования
применяется в случае, когда какому-то элементу
HTML
одновременно поставлено в соответствие более одного правила CSS, то есть, когда происходит конфликт значений этих правил. Чтобы разрешить такие конфликты, вводятся правила приоритета.
Наиболее низким приоритетом обладает стиль браузера;
Следующим по значимости является стиль, заданный пользователем браузера в его настройках;
И наиболее высоким приоритетом обладает стиль, заданный непосредственно автором страницы. И далее, уже в этом авторском стиле приоритеты расставляются следующим образом:
Самым низким приоритетом обладают стили, наследуемые в документе элементом от своих предков;
Более высоким приоритетом обладают стили, заданные во внешних таблицах стилей, подключённых к документу;
Ещё более высоким приоритетом обладают стили, заданные непосредственно селекторами всех десяти видов (см. подраздел «виды селекторов»), содержащимися в контейнерах style данного документа. Нередки случаи, когда к какому-нибудь элементу имеют отношение, задают его вид, несколько таких селекторов. Такие конфликты между ними разрешаются с помощью расчёта специфичности каждого такого селектора и применения этих селекторов к данному элементу в порядке убывания их специфичностей. При расчёте специфичности селектора принимается во внимание:
количество идентификаторов (
#id
) в селекторе&#160;— ((1,0,0) за каждый объявленный идентификатор в селекторе правила CSS);
количество классов (
.class
), атрибутов (
[attr], [attr="value"]
) и псевдоклассов (
:pseudo-class
) в селекторе&#160;— ((0,1,0) за каждый объявленный класс, атрибут и псевдокласс в селекторе правила CSS);
количество элементов (
h1, input
) и псевдоэлементов (::pseudo-element) в селекторе&#160;— ((0,0,1) за каждый объявленный элемент и псевдоэлемент в селекторе правила CSS).
Принцип расчёта таков, что, например, (1,0,0) будет иметь большую специфичность, соответственно&#160;— бо́льший приоритет, чем даже (0,10,0), (0,1,0) будет иметь большую специфичность, больший приоритет, чем (0,0,10). Если же рассчитанные таким образом специфичности окажутся одинаковыми, то к элементу будет применено правило, описанное селектором, расположенным в документе ниже других
Ещё более высоким приоритетом обладают стили, объявленные непосредственно в теге данного элемента посредством атрибута style этого тега;
И наконец самым высоким приоритетом обладают стили, объявленные автором страницы
или пользователем
, с помощью сопроводительного правила
!important
. Если таких свойств несколько, то предпочтение отдаётся в первую очередь стилям,
заданным автором или пользователем
, а для остальных свойств, которые будут являться задаваемыми автором страницы, потребуется определить их специфичности по принципам, описанным выше, и применять эти свойства в порядке убывания этих специфичностей.
Пример таблицы стилей
[
править
|
править код
]
Пример таблицы стилей (в таком виде она может быть либо размещена в отдельном файле .css либо же обрамлена тегами
&lt;style&gt;
и размещена в «шапке» той самой веб-страницы, на которую она действует):
p
{
font-family
:
arial
,
helvetica
,
sans-serif
;
}
h2
{
font-size
:
20
pt
;
color
:
red
;
background
:
white
;
}
.
note
{
color
:
red
;
background-color
:
yellow
;
font-weight
:
bold
;
}
p
#
paragraph1
{
padding-left
:
10
px
;
}
a
:
hover
{
text-decoration
:
none
;
}
#
news
p
{
color
:
blue
;
}
[
type
=
&quot;button&quot;
]
{
background-color
:
green
;
}
Здесь приведено семь правил CSS с селекторами
p
,
h2
,
.note
,
p#paragraph1
,
a:hover
,
#news p
и
[type="button"]
.
Первое правило присвоено HTML-элементу
p
(
абзацу
)&#160;— назначен стиль. Абзацы будут отображаться шрифтом Arial или, если такой шрифт недоступен, тогда Helvetica или Sans-serif, иначе, другим шрифтом этого семейства.
Второе правило присвоено HTML-элементу
h2
(заголовку второго уровня). Заголовок второго уровня будет отображаться красным на белом фоне с увеличенным
размером
.
Третье правило будет применено к
любому
элементу, атрибут
class
которого равен «note». Например, к параграфу:
&lt;p class="note"&gt;Этот абзац будет выведен полужирным шрифтом красного цвета на жёлтом фоне. &lt;/p&gt;
Четвёртое правило будет применяться только к элементу
p
, атрибут
id
которого равен
paragraph1
. Такой элемент будет иметь внутренний отступ в 10 пикселей (padding).
Пятое правило определяет стиль
hover
для элементов
a
&#160;—
гиперссылок
.
По умолчанию
, в большинстве браузеров текст элементов
a
подчёркивается. Это правило уберёт подчёркивание, когда указатель мыши находится над этими элементами.
Шестое правило, применяется для элементов
p
, которые находятся внутри
какого-либо
элемента с атрибутом
id
, равным «
news
» (#news p&#160;— это типичный случай селектора потомков, см.
5-й пункт списка выше
).
Седьмое правило применяется для всех элементов, у которых атрибут
type
равен
button
. Например, это правило будет применено к элементу
&lt;input type="button"&gt;
или
&lt;button type="button"&gt;Кнопка&lt;/button&gt;
(обычная кнопка), изменив его цвет фона на зелёный.
CSS-вёрстка
[
править
|
править код
]
До появления CSS оформление веб-страниц осуществлялось исключительно средствами
HTML
, непосредственно внутри содержимого документа. Однако с появлением CSS стало возможным принципиальное разделение содержания и представления документа. За счёт этого нововведения стало возможным лёгкое применение единого стиля оформления для массы схожих документов, а также быстрое изменение этого оформления.
Преимущества:
Несколько дизайнов страницы для разных устройств просмотра. Например, на экране дизайн будет рассчитан на большую ширину, во время печати меню не будет выводиться, а на
КПК
и сотовом телефоне меню будет следовать за содержимым.
Уменьшение времени загрузки страниц сайта за счет переноса правил представления данных в отдельный CSS-файл. В этом случае браузер загружает только структуру документа и данные, хранимые на странице, а представление этих данных загружается браузером только один раз и может быть
закэшировано
.
Простота последующего изменения дизайна. Не нужно править каждую страницу, а достаточно лишь изменить CSS-файл.
Дополнительные возможности оформления. Например, с помощью CSS-вёрстки можно сделать блок текста, который остальной текст будет обтекать (например для меню) или сделать так, чтобы меню было всегда видно при прокрутке страницы.
Недостатки:
Различное отображение вёрстки в различных браузерах (особенно устаревших), которые по-разному интерпретируют одни и те же данные CSS.
Часто встречающаяся необходимость на практике исправлять не только один CSS-файл, но и теги HTML, которые сложным и ненаглядным способом связаны с селекторами CSS, что иногда сводит на нет простоту применения единых файлов стилей и значительно увеличивает время редактирования и тестирования.
История создания и развития CSS
[
править
|
править код
]
CSS&#160;— одна из широкого спектра технологий, одобренных консорциумом
W3C
и получивших общее название «стандарты Web»
&#91;2&#93;
. В 1990-х годах стала ясна необходимость стандартизировать Web, создать какие-то единые правила, по которым программисты и
веб-дизайнеры
проектировали бы сайты. Так появились языки
HTML
4.01 и
XHTML
, и стандарт CSS.
В начале 1990-х различные браузеры имели свои стили для отображения веб-страниц. HTML развивался очень быстро и был способен удовлетворить все существовавшие на тот момент потребности по оформлению информации, поэтому CSS не получил тогда широкого признания.
Термин «каскадные таблицы стилей» был предложен
Хокон Виум Ли
в 1994 году. Совместно с Бертом Босом он стал развивать CSS.
В отличие от многих существовавших на тот момент языков стиля, CSS использует наследование от родителя к потомку, поэтому разработчик может определить разные стили, основываясь на уже определённых ранее стилях.
В середине 1990-х Консорциум Всемирной паутины (
W3C
) стал проявлять интерес к CSS, и в декабре 1996 года была издана рекомендация CSS1.
Уровень 1 (CSS1)
[
править
|
править код
]
Рекомендация W3C, принята
17 декабря
1996 года
, откорректирована
11 января
1999 года
&#91;3&#93;
. Среди возможностей, предоставляемых этой рекомендацией:
Параметры шрифтов. Возможности по заданию гарнитуры и размера шрифта, а также его стиля&#160;— обычного, курсивного или полужирного.
Цвета. Спецификация позволяет определять цвета текста, фона, рамок и других элементов страницы.
Атрибуты текста. Возможность задавать межсимвольный интервал, расстояние между словами и высоту строки (то есть межстрочные отступы)
Выравнивание для текста, изображений, таблиц и других элементов.
Свойства блоков, такие как высота, ширина, внутренние (
padding
) и внешние (
margin
) отступы и рамки. Также в спецификацию входили ограниченные средства по позиционированию элементов, такие как
float
и
clear
.
Уровень 2 (CSS2)
[
править
|
править код
]
Рекомендация W3C, принята
12 мая
1998 года
&#91;4&#93;
. Основана на CSS1 с сохранением обратной совместимости за несколькими исключениями. Добавление к функциональности:
Блочная вёрстка. Появились относительное, абсолютное и фиксированное позиционирование. Позволяет управлять размещением элементов по странице без
табличной вёрстки
.
Типы носителей. Позволяет устанавливать разные стили для разных носителей (например
монитор
,
принтер
,
КПК
).
Звуковые таблицы стилей. Определяет голос, громкость и&#160;т.&#160;д. для звуковых носителей (например для слепых посетителей сайта).
Страничные носители. Позволяет, например, установить разные стили для элементов на чётных и нечётных страницах при печати.
Расширенный механизм селекторов.
Указатели.
Генерируемое содержимое. Позволяет добавлять содержимое, которого нет в исходном документе, до или после нужного элемента.
В настоящее время W3C больше не поддерживает CSS2 и рекомендует использовать CSS2.1
Уровень 2, ревизия 1 (CSS2.1)
[
править
|
править код
]
Рекомендация W3C, принята
7 июня
2011 года
.
CSS2.1 основана на CSS2. Кроме исправления ошибок, в новой ревизии изменены некоторые части спецификации, а некоторые и вовсе удалены. Удаленные части могут быть в будущем добавлены в CSS3.
Уровень 3 (CSS3)
[
править
|
править код
]
CSS3 таксономия и статус:
●
&#160;Рекомендация
●
&#160;Кандидат в рекомендации
●
&#160;Последнее требование
●
&#160;Рабочий проект
CSS3
(
англ.
&#160;
Cascading Style Sheets 3
&#160;—
каскадные таблицы стилей третьего поколения
)&#160;— активно разрабатываемая спецификация
CSS
. Представляет собой
формальный язык
, реализованный с помощью
языка разметки
. Самая масштабная редакция по сравнению с CSS1, CSS2 и CSS2.1. Главной особенностью CSS3 является возможность создавать анимированные элементы без использования
JS
&#91;5&#93;
, поддержка линейных и радиальных градиентов, теней, сглаживания и прочее.
Преимущественно используется как средство описания и оформления внешнего вида
веб-страниц
, написанных с помощью
языков разметки
HTML
и
XHTML
, но может также применяться к любым
XML-документам
, например, к
SVG
или
XUL
.
Разрабатываемая версия (список всех модулей)
&#91;6&#93;
.
В отличие от предыдущих версий спецификация разбита на модули, разработка и развитие которых идёт независимо. CSS3 основан на CSS2.1, дополняет существующие свойства и значения и добавляет новые.
Нововведения, начиная с малых, вроде закругленных углов блоков, заканчивая трансформацией (
анимацией
) и, возможно, введением
переменных
&#91;7&#93;
&#91;8&#93;
.
Уровень 4 (CSS4)
[
править
|
править код
]
Разрабатывается
W3C
с 29 сентября 2011 года.
&#91;9&#93;
&#91;10&#93;
Модули CSS4 построены на основе CSS3 и дополняют их новыми свойствами и значениями. Все они существуют пока в виде черновиков (working draft).
Например:
CSS Cascading and Inheritance Level 4
Selectors Level 4
CSS Image Values and Replaced Content Module Level 4
CSS Backgrounds and Borders Module Level 4
CSS Color Module Level 4
Media Queries Level 4
CSS Pseudo-Elements Module Level 4
CSS Text Module Level 4
Поддержка CSS браузерами
[
править
|
править код
]
Наиболее полно поддерживающими стандарт CSS являются работающие на
движках
Gecko
(
Mozilla Firefox
и др.),
WebKit
(
Safari
,
Arora
,
Google Chrome
) и
Presto (Opera)
&#91;11&#93;
браузеры.
Бывший самый распространённый браузер
&#91;12&#93;
Internet Explorer
6 поддерживает CSS не полностью
&#91;13&#93;
.
Вышедший спустя семь лет Internet Explorer 7 значительно улучшил уровень поддержки CSS
&#91;14&#93;
&#91;15&#93;
, но всё ещё содержал значительное количество ошибок
&#91;16&#93;
.
В Internet Explorer 8 используется новый движок, который полностью поддерживает CSS 2.1 и частично&#160;— CSS 3
&#91;17&#93;
.
Для проверки поддержки браузером веб-стандартов, в том числе и различных частей стандарта CSS, был разработан тест
Acid
.
Различные блоковые модели
[
править
|
править код
]
В стандартах CSS от Консорциума
W3C
используется модель, в которой свойство
width
определяет ширину содержимого блока, не включая в неё отступы и рамки. Ранние версии
Internet Explorer
(4 и 5) реализовали собственную модель, в которой width определяет расстояние между рамками блока, включая отступы (
padding
) и рамки (
border
). Кроме Internet Explorer 5, эту модель также понимают браузеры
Netscape
4 и
Opera
7. Поддержка стандартной модели W3C появилась в IE только в шестой версии.
В разрабатываемом стандарте CSS3 для решения этой проблемы введено свойство
box-sizing
со значениями
content-box
для указания на использование стандартной модели W3C и
border-box
для использования модели IE 5.
В браузере
Mozilla
при поддержке этого свойства под собственным «рабочим» названием
-moz-box-sizing
ввели ещё одно значение&#160;—
padding-box
, таким образом создав третью блочную модель, в которой
width
- это размер содержимого и отступов блока, не включая рамки.
CSS-фильтры
[
править
|
править код
]
Различия в реализации CSS различными браузерами заставляют веб-разработчиков искать решения, как заставить все браузеры отображать страницу одинаково. CSS-фильтры (также часто называемые CSS-хаками) позволяют выборочно применять стили к различным элементам. Например, известно, что
Internet Explorer
6 применяет правила, использующие селекторы вида
* html
селектор
(фильтр, известный как «
star html bug
»). Чтобы блоковая модель W3C и IE, работающая в
Quirks mode
, отображала блок
#someblock
шириной в 100 пикселей и внутренними отступами в 10 пикселей, можно написать такой код:
/* Модель W3C - 80px ширина содержимого и 10px отступы с каждой стороны */
#
someblock
{
width
:
80
px
;
padding
:
10
px
;
}
/* Следующее правило применит только IE6. */
*
html
#
someblock
{
width
:
100
px
;
padding
:
10
px
;
}
Ещё одним способом выборочного применения правил для Internet Explorer являются
условные комментарии
.
Безопасность
[
править
|
править код
]
Все поддерживаемые в 2010 году версии Internet Explorer были уязвимы: при обработке браузером каскадных стилей (CSS) может возникнуть неинициализированная память, впоследствии используемая для удалённого запуска вредоносного кода на компьютере пользователя
&#91;18&#93;
.
CSS Framework
[
править
|
править код
]
Основная статья:
CSS-фреймворк
CSS Framework
(также
Web design framework
)&#160;— это заранее подготовленная CSS-библиотека, созданная для упрощения работы верстальщика, быстроты разработки и исключения максимально возможного числа ошибок вёрстки (проблемы совместимости различных версий браузеров и&#160;т.&#160;д.). Так же как и библиотеки скриптовых языков программирования, CSS-фреймворки, обычно имеющие вид внешнего .css-файла, «подключаются» к проекту (добавляются в заголовок веб-страницы), позволяя неискушённому в тонкостях вёрстки программисту или дизайнеру правильно создать html-макет.
Расширения CSS
[
править
|
править код
]
Часто при вёрстке страниц нужно использовать одно и то же значение много раз: один и тот же цвет, один и тот же шрифт. И если это значение нужно будет изменить, то придётся менять во многих местах. В стандартном CSS нет возможностей наследования стилей, вычисляемых значений и прочих зависимостей.
Для решения этих вопросов и ускорения разработки существует несколько расширений (препроцессоров) языка CSS. Расширений в том смысле, что код CSS является валидным кодом для расширения, но не наоборот. Чтобы из кода «расширенного CSS» получился обычный CSS-файл, воспринимаемый браузером, необходимо выполнить компиляцию. Компиляция может быть нескольких типов:
во время запуска страницы на стороне клиента (средствами
JavaScript
)
во время запуска страницы на стороне сервера
во время вёрстки сайта средствами специального компилятора
Примеры расширений (препроцессоров) CSS:
Sass
LESS
Stylus
Языки некоторых расширений
PostCSS
См. также
[
править
|
править код
]
Имеется
викиучебник
по&#160;теме
«
CSS
»
Имеется
викиучебник
по&#160;теме
«
CSS
»
HTML5
SGML
JavaScript
CSS Framework
CSSTidy
Примечания
[
править
|
править код
]
↑
https://www.iana.org/assignments/media-types/text/css
↑
Дэйв Ши, Молли Е. Хольцшлаг. Философия CSS-дизайна. / Пер. с англ. А. Слинкина.&#160;— М.: НТ Пресс, 2005.&#160;— 312 с.: ил.
↑
Cascading Style Sheets, level 1
↑
Cascading Style Sheets, level 2 CSS2 Specification
↑
Простая CSS3 анимация с Animate.css
↑
W3C
:
CSS: current work
, CSS 3, etc.
↑
CSS3: css variables are a bad idea. Just allow us to call other selectors.
// Rip’s Domain
↑
CSS Variables
// dave-woods.co.uk
↑
Selectors Level 4
&#160;
(неопр.)
.&#32; W3.org&#32;(29 сентября 2011).&#32;
Архивировано
30&#160;мая 2012&#160;года.
↑
Discover What's New in CSS 4 &#124; Webmonkey &#124; Wired.com
&#160;
(неопр.)
.&#32; Webmonkey&#32;(26&#160;октября 2011).&#32;
Архивировано
30&#160;мая 2012&#160;года.
↑
Web browser standards support
↑
Mozilla’s Firefox global usage share is still growing according to OneStat.com
↑
Contents and browser compatibility
↑
Details on our CSS changes for IE7
IEBlog
↑
Cascading Style Sheet Compatibility in Internet Explorer 7
MSDN
↑
The weird and wonderful world of Internet Explorer
↑
CSS Compatibility and Internet Explorer
MSDN
↑
Microsoft: все версии Internet Explorer уязвимы для хакеров
Литература
[
править
|
править код
]
Дэвид Сойер Макфарланд.
&#32;Новая большая книга CSS&#32;&#61;&#32;CSS: The Missing Manual.&#160;— Санкт-Петербург:
Питер
, 2017.&#160;— 720&#160;с.&#160;—
1000 экз.
&#160;—
ISBN 978-5-496-02080-0
.
Эд Титтел, Джефф Ноубл.
&#32;HTML, XHTML и CSS для чайников, 7-е издание&#32;&#61;&#32;HTML, XHTML &amp; CSS For Dummies, 7th Edition.&#160;—
М.
:
«Диалектика»
, 2011.&#160;— 400&#160;с.&#160;—
ISBN 978-5-8459-1752-2
.
Стивен Шафер.
&#32;HTML, XHTML и CSS. Библия пользователя, 5-е издание&#32;&#61;&#32;HTML, XHTML, and CSS Bible, 5th Edition.&#160;—
М.
:
«Диалектика»
, 2011.&#160;— 656&#160;с.&#160;—
ISBN 978-5-8459-1676-1
.
Ссылки
[
править
|
править код
]
Англоязычные ресурсы
[
править
|
править код
]
Cascading Style Sheets Home page
&#160;
(англ.)
Web Style Sheets Home page
&#160;
(англ.)
Различные блоковые модели CSS
&#160;
(англ.)
CSS3-тест браузера
&#160;
(англ.)
Таблицы поддерживаемых браузерами возможностей CSS
&#160;
(англ.)
Валидатор CSS
&#160;
(англ.)
Демонстрация возможностей CSS-вёрстки
&#160;
(англ.)
CSS3 Preview&#160;— Демонстрация новых возможностей CSS3
&#160;
(англ.)
Демонстрация возможностей
&#160;
(англ.)
Оптимизатор CSS кода
&#160;
(англ.)
Русскоязычные ресурсы
[
править
|
править код
]
Каскадные Таблицы Стилей Домашняя страница
&#160;
(рус.)
Веб таблицы стилей Домашняя страница
&#160;
(рус.)
Сервис проверки CSS от W3C
Учебник CSS
(рекомендован
w3.org
)
Справочник CSS
Языки таблиц стилей
[en]
(
сравнение
[en]
,
список
[en]
)
Режимы
Настольная издательская система
[en]
Веб-разработка
Пользовательский интерфейс
[en]
Стандартные
CSS
DSSSL
XSL
Нестандартные
JSSS
[en]
FOSI
[en]
Qt Style Sheets
Sass
LESS
Stylus
SMIL Timesheets
[en]
Стандарты
Консорциума Всемирной паутины (W3C)
Продукты и
стандарты
Рекомендации
ARIA
Canonical XML
CDF
CSS
DOM
Geolocation API
HTML
(
HTML5
)
InkML
ITS
JSON-LD
MathML
OWL
P3P
PLS
RDF
RDFS
SISR
SKOS
SMIL
SOAP
SRGS
SSML
SVG
SPARQL
Timed Text
VoiceXML
Web Storage
WSDL
XForms
XHTML
XInclude
XLink
XML
XML Base
XML Encryption
XML Events
XML Information Set
XML namespace
XML Schema
XML Signature
XOP
XPath
1.0
,
2.0
XPointer
XProc
XQuery
XSL
XSL-FO
XSLT
(
элементы
)
Notes
XAdES
XHTML+SMIL
XUP
Рабочие проекты
CCXML
CURIE
EME
MSE
RIF
SCXML
SMIL Timesheets
sXBL
WICD
XFDL
XFrames
XBL
XMLHttpRequest
Руководства
Web Content Accessibility Guidelines
Инициативы
Multimodal Interaction Activity (MMI)
Markup Validation Service
Web Accessibility Initiative
WebPlatform
Устаревшие
CHTML
HDML
JSSS
PGML
VML
XHTML+MathML+SVG
Организации
World Wide Web Foundation
Рабочие группы
SVG
CSS
HTML
WebOnt (Semantic Web Activity)
Device Description (DDWG)
Web Hypertext Application Technology (WHATWG)
ПО
CERN httpd
Libwww
Браузеры
Line Mode
(1990–)
Arena
(1993–98)
Agora
(1994–97)
Argo
(1994–97)
Amaya
(браузер/редактор, 1996–2012)
Конференции
International World Wide Web Conference (IW3C)
Steering Committee (IW3C2)
First conference ("WWW1", 1994)
Веб
и
веб-сайты
Глобально
Всемирная паутина
Веб 1.0
Веб 2.0
Веб 3.0
Семантическая паутина
Нейронет
Локально
Сайт
Портал
Страница
Служба
Кольцо
Виды сайтов
и сервисов
Виртуальный атлас
Баннерная сеть
Библиотека
Блог
(
платформа
)
Видеохостинг
Вики
Сайт-визитка
Вопрос-ответ
Закладки
Службы знакомств
Браузерная игра
Каталог ресурсов
Интернет-магазин
Микроблог
Новостной сайт
Поисковая система
Порносайт
Веб-почта
Социальная сеть
Тамблелог
BitTorrent-трекер
Файлообменник
Форум
Сервис
Имиджборд
Фотохостинг
Чат
Создание
и обслуживание
Мастер
Разработка
Дизайн
Вёрстка
Программирование
Юзабилити
Опыт взаимодействия
Продвижение сайта
Поисковая оптимизация
(SEO)
Хостинг
Системный администратор
Модератор
Учётная запись
Авторизация
Типы макетов,
страниц, сайтов
Статический
Динамический
Фиксированный
Резиновый
Динамично эластичный
Адаптивный
Техническое
Веб-сервер
(
сравнение
)
Браузер
(
сравнение
)
DNS
CMF
CMS
HTTP
(
ответы
заголовки
)
SPDY
QUIC
CGI
HTML
XHTML
CSS
PHP
JavaScript
DHTML
Cookie
DOM
XML
AJAX
JSON
Flash
RSS
Atom
Информер
Микроформат
favicon
.ico
robots.txt
Sitemaps
Карта сайта
.htaccess
Маркетинг
Интернет-маркетинг
Интернет-реклама
Баннер
Контекстная реклама
Тизер
Киберсквоттинг
Социум и&#160;культура
Блогосфера
Интернет-сообщество
(
районное
)
Сетевая литература
Источник —
https://ru.wikipedia.org/w/index.php?title=CSS&amp;oldid=97213543
Категории
:
Форматы файлов
Языки разметки
Языки стилей
Стандарты Интернета
Стандарты W3C
Каскадные таблицы стилей
Скрытые категории:
Википедия:Статьи с некорректным использованием шаблонов:Cite web (не указан язык)
Википедия:Статьи с источниками из Викиданных
Википедия:Статьи с переопределением значения из Викиданных
ПРО:ИТ:Статьи по алфавиту
ПРО:ИТ:Последняя правка: в текущем году
Википедия:Ссылка на Викиучебник непосредственно в статье
Страницы, использующие волшебные ссылки ISBN
Навигация
Персональные инструменты
Вы не представились системе
Обсуждение
Вклад
Создать учётную запись
Войти
Пространства имён
Статья
Обсуждение
Варианты
Просмотры
Читать
Текущая версия
Править
Править код
История
Ещё
Поиск
Навигация
Заглавная страница
Рубрикация
Указатель А — Я
Избранные статьи
Случайная статья
Текущие события
Участие
Сообщить об ошибке
Сообщество
Форум
Свежие правки
Новые страницы
Справка
Пожертвовать
Инструменты
Ссылки сюда
Связанные правки
Служебные страницы
Постоянная ссылка
Сведения о странице
Элемент Викиданных
Цитировать страницу
Печать/экспорт
Создать книгу
Скачать как PDF
Версия для печати
В других проектах
Викисклад
Викиучебник
Викиверситет
На других языках
Afrikaans
العربية
Azərbaycanca
Boarisch
Žemaitėška
Беларуская
Български
Bosanski
Català
Čeština
Cymraeg
Dansk
Deutsch
Zazaki
Dolnoserbski
Ελληνικά
English
Esperanto
Español
Eesti
Euskara
فارسی
Suomi
Français
Gaeilge
Gàidhlig
Galego
עברית
Hrvatski
Hornjoserbsce
Magyar
Հայերեն
Interlingua
Bahasa Indonesia
Íslenska
Italiano
日本語
Qaraqalpaqsha
Қазақша
한국어
Кыргызча
Latina
Lingua Franca Nova
Lumbaart
Lietuvių
Latviešu
Македонски
മലയാളം
Bahasa Melayu
မြန်မာဘာသာ
Nederlands
Norsk nynorsk
Norsk
ਪੰਜਾਬੀ
Polski
Português
Română
Srpskohrvatski / српскохрватски
සිංහල
Simple English
Slovenčina
Slovenščina
Shqip
Српски / srpski
Svenska
தமிழ்
Tetun
Тоҷикӣ
ไทย
Türkmençe
Tagalog
Türkçe
ئۇيغۇرچە / Uyghurche
Українська
اردو
Oʻzbekcha/ўзбекча
Tiếng Việt
中文
Править ссылки
Эта страница в последний раз была отредактирована 2 января 2019 в 18:25.
Текст доступен по
лицензии Creative Commons Attribution-ShareAlike
; в отдельных случаях могут действовать дополнительные условия.
Подробнее см.
Условия использования
.
Wikipedia® — зарегистрированный товарный знак некоммерческой организации
Wikimedia Foundation, Inc.
Политика конфиденциальности
Описание Википедии
Отказ от ответственности
Свяжитесь с нами
Разработчики
Соглашение о cookie
Мобильная версия
